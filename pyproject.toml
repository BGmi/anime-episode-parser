[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "anime-episode-parser"
version = "0.0.11"
description = 'A library to parse episode info from anime title'
authors = ["Trim21 <trim21.me@gmail.com>", "RicterZ <ricterzheng@gmail.com>"]
readme = 'README.md'
license = 'MIT'
homepage = 'https://github.com/BGmi/anime-episode-parser'
repository = 'https://github.com/BGmi/anime-episode-parser'
keywords = ['anime']
classifiers = [
  'Development Status :: 4 - Beta',
  'Intended Audience :: Other Audience',
  'Natural Language :: Chinese (Traditional)',
  'License :: OSI Approved :: MIT License',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3.6',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python :: Implementation :: PyPy'
]
packages = [{ include = "anime_episode_parser" }]

[tool.poetry.dependencies]
python = "^3.7"

[tool.poetry.dev-dependencies]
# tests
coverage = { version = "==7.2.7", extras = ['toml'] }
pytest = "==7.3.1"
# lint
pre-commit = { version = "==3.3.2", python = '^3.9', markers = "implementation_name != 'pypy'" }
mypy = { version = "==1.3.0", python = '^3.9', markers = "implementation_name != 'pypy'" }
ruff = "0.0.270"

[tool.coverage.report]
exclude_lines = [
  'pragma: no cover',
  'if TYPE_CHECKING:',
  'if __name__  "__main__":',
  'if typing.TYPE_CHECKING:',
  'raise NotImplementedError'
]

[tool.isort]
default_section = 'THIRDPARTY'
indent = '    '
known_first_party = 'anime_episode_parser'
length_sort = true
line_length = 88
multi_line_output = 3
no_lines_before = 'LOCALFOLDER'
use_parentheses = true
include_trailing_comma = true

[tool.pytest.ini_options]
addopts = '-rqa'
junit_family = 'legacy'

[tool.mypy]
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
pretty = true


[tool.ruff]
select = [
  "B",
  "C",
  "E",
  "F",
  "G",
  "I",
  "N",
  "Q",
  "S",
  "W",
  "BLE",
  #  "DJ",
  "ERA",
  "EXE",
  "ICN",
  "INP",
  "ISC",
  "NPY",
  #  "DTZ",
  #  "PTH",
  "PD",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TCH",
  "TID",
  "TRY",
  "YTT",
]
ignore = [
  'PLR0911',
  'INP001',
  'N806',
  'N802',
  'N803',
  'E501',
  'BLE001',
  'RUF002',
  'S301',
  'S314',
  'S101',
  'N815',
  'S104',
  'C901',
  'ISC003',
  'PLR0913',
  'I001',
  'RUF001',
  'SIM108',
  'TCH003',
  'RUF003',
  'RET504',
  'TRY300',
  'TRY003',
  'TRY201',
  'TRY301',
  'PLR0912',
  'PLR0915',
  'PLR2004',
  'PGH003',
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
  "A",
  "B",
  "C",
  "E",
  "F",
  "G",
  "I",
  "N",
  "Q",
  "S",
  "W",
  "BLE",
  "DJ",
  "DTZ",
  "EM",
  "ERA",
  "EXE",
  "FBT",
  "ICN",
  "INP",
  "ISC",
  "NPY",
  "PD",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TCH",
  "TID",
  "TRY",
  "YTT",
]

target-version = "py310"
